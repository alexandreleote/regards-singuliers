{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .reservation-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
        }
        .service-details {
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        .calendly-container {
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="reservation-container">
        <div class="service-details">
            <h1 class="text-2xl font-bold mb-4">Réserver - {{ service.title }}</h1>
            <div class="mb-4">
                <p class="text-gray-600">{{ service.description }}</p>
                <p class="text-lg font-medium mt-2">Prix : {{ service.price }}€</p>
            </div>
        </div>

        <div class="calendly-container">
            <h2 class="text-xl font-semibold mb-4">Choisissez votre créneau</h2>
            <div class="calendly-inline-widget" 
                 data-url="https://calendly.com/alexandreleoteweb/30min" 
                 style="min-width:320px;height:700px;">
            </div>
            <script type="text/javascript" src="https://assets.calendly.com/assets/external/widget.js" async></script>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        window.addEventListener('calendly.event_scheduled', function(e) {
            console.log('Événement Calendly détecté:', e.data.event);
            const event = e.data.event;
            const startTime = new Date(event.start_time);
            
            console.log('Envoi de la requête avec la date:', startTime.toISOString());
            
            fetch('{{ path('reservation_date_confirm', {'id': service.id}) }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    datetime: startTime.toISOString()
                })
            })
            .then(response => {
                console.log('Statut de la réponse:', response.status);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Données reçues:', data);
                if (data.success) {
                    console.log('Redirection vers:', data.redirect);
                    window.location.href = data.redirect;
                } else {
                    console.error('Erreur dans la réponse:', data.error);
                    alert(data.error || 'Une erreur est survenue');
                }
            })
            .catch(error => {
                console.error('Erreur détaillée:', error);
                alert('Une erreur est survenue lors de la confirmation de la réservation. Veuillez réessayer.');
            });
        });
    </script>
{% endblock %}